#version 400 core

in vec4 colour;
in vec3 unitLight;
in vec3 unitCamera;
in vec3 vertexNormal;

out vec4 out_colour;

const float damp = 1;
const float reflectivity = 0.5;

void main(void){
	
	vec3 light = normalize(unitLight);
	vec3 camera = normalize(unitCamera);
	vec3 normal = normalize(vertexNormal);
	
	float lightCameraDot = dot(light, normal);
	float brightness = max(0.0,lightCameraDot);
	
	vec3 reflected = reflect(-light, normal);
	vec3 final = pow(max(dot(reflected, camera), 0.0), damp)*reflectivity*vec3(1.0,1.0,1.0);
	
	
	
	out_colour = vec4(brightness*vec3(1.0,1.0,1.0), 1.0) + vec4(final, 1.0);

}